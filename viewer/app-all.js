/*
Copyright(c) 2012 Company Name
*/
var CV={};stores=[];CV.app=Ext.application({name:"CV",paths:{"Ext.ux":"extjs/examples/ux"},controllers:["Library","Feature","Help"],requires:["CV.ux.Router"],autoCreateViewport:true,facets:true,launch:function(){Ext.override(Ext.app.Controller,{render:function(a){var b,c=Ext.getCmp("main_tabpanel");c.setLoading(true);this.header.toggle(true,false);if(Ext.isString(a)){a=this.getView(a).create()}c.fireHierarchyEvent("hide");if(c.items.getAt(0)!==a){c.removeAll(false);c.add(a)}c.setLoading(false)}});CV.ux.Router.on({routemissed:function(a){Ext.Msg.show({title:"Error 404",msg:"Route not found: "+a,buttons:Ext.Msg.OK,icon:Ext.Msg.ERROR})},beforedispatch:function(b,a,c){console.log("beforedispatch "+b)},dispatch:function(c,b,d,a){console.log("dispatch "+c)}})},routes:{"/":"library#show","library/:id":"library#show",library:"library#show",species:"species#show","species/:id":"species#show",feature:"feature#show","feature/:id":"feature#show","feature/:id/:name":"feature#show",help:"help#show"}});Ext.define("CV.config.ChadoViewer",{singleton:true,statics:{drupalBase:"",baseUrl:"ws/database.php",genomeviewer:{url:"ws/genome.php"},selectedIds:undefined,currentUri:undefined,countField:"total",library:{tree:{extraParams:{ds:"library",type:"tree"},view:{}},cv:{extraParams:{ds:"library",type:"cv",id:0,ids:undefined},ds:"library"},graph:{vocabulary:{id:0,get:"cv",ds:"library",type:"graph",facets:null},cvterm:{id:0,get:"cv_term",cv_id:0,ds:"library",type:"graph",cv_name:"",facets:null,ids:null},ds:"library"},feature:{extraParams:{ds:"library",type:"feature",id:0,facets:null},ds:"library"}},species:{tree:{extraParams:{ds:"species",type:"tree"}},cv:{extraParams:{ds:"species",type:"cv",id:0},ds:"species"},graph:{vocabulary:{id:0,get:"cv",ds:"species",type:"graph",facets:null},cvterm:{id:0,get:"cv_term",cv_id:0,cv_name:"",ds:"species",type:"graph",facets:null},ds:""},feature:{extraParams:{ds:"species",type:"feature",id:0,facets:null},ds:"species"}},feature:{fasta:{ds:"feature",type:"fasta",feature_id:0}},rawColumns:[{dataIndex:"name",text:"Classification",type:"string",flex:1},{dataIndex:"total",text:"Total",type:"integer",flex:1}]},getOnlyIds:function(){var b=this.self.selectedIds,a=[],c;if(b){for(c in b){a.push(b[c].id)}}return a},getIdsText:function(){var b=this.self.selectedIds,a=[],c;if(b){for(c in b){a.push(b[c].text)}}return a},getComaIds:function(){var a=this.getOnlyIds();return JSON.stringify(a)},getHigherNames:function(){var c={},a,b=this.self.selectedIds;for(a in b){c[b[a].id]=b[a].text}return c}});Ext.define("CV.ux.Router",(function(){var b,a,g=false,h=[],c=/^:/;function j(k,l){k=k.split("");if(k[k.length-1]==="/"){k.pop()}if(l&&k[0]==="/"){k.shift()}return k.join("")}function e(){if(!a.routes){Ext.global.console.warn("No routes were found. Consider defining routes object in your Ext.application definition.");return}Ext.iterate(a.routes,function(k,l){l=l.split("#");k=j(k,true);h.push({controller:Ext.String.capitalize(l[0]),action:l[1],sections:k.split("/")})})}function d(k){if(Ext.isNumeric(k)){return parseFloat(k,10)}return k}function f(){Ext.getBody().createChild({tag:"form",id:"history-form",cls:Ext.baseCSSPrefix+"hide-display",html:['<input type="hidden" id="',Ext.History.fieldId,'" />','<iframe id="',Ext.History.iframeId,'"></iframe>'].join("")});Ext.History.init();Ext.History.on("change",b.processURI,b)}b={singleton:true,requires:["Ext.util.History","Ext.form.field.Date","Ext.app.Application"],mixins:{observable:"Ext.util.Observable"},init:function(k){a=k;b=CV.ux.Router;if(g){return}g=true;e();Ext.onReady(function(){f();b.processURI(Ext.History.getToken())})},processURI:function(m){var k,o=b.decomposeURI(m),l=this.findMatch(o),n=Ext.apply({},o.params);if(l===false){b.fireEvent("routemissed",m);return false}Ext.iterate(l.sections,function(q,p){if(c.test(q)){q=q.replace(c,"");n[q]=o.sections[p]}});Ext.iterate(n,function(p,q){n[p]=d(q)});if(b.fireEvent("beforedispatch",m,l,n)===false){return}k=a.getController(l.controller);k[l.action].call(k,n);b.fireEvent("dispatch",m,l,n,k)},decomposeURI:function(k){k=(k||"").toString().trim();k=k.split("?");return{sections:j(k[0]).split("/"),params:Ext.Object.fromQueryString(k[1]||"",true)}},findMatch:function(p){var n=false,o,m,q,k;if(Ext.isString(p)){p=b.decomposeURI(p)}Ext.iterate(h,function(l){if(l.sections.length!==p.sections.length){return}n=true;for(o=0,m=l.sections.length;o<m;o++){q=l.sections[o];k=p.sections[o];if(q!==k&&!c.test(q)){n=false;break}}if(n){n=l;return false}});return n},redirect:function(k){Ext.History.add(k)}};return b}()),function(){var a=this;a.addEvents("routemissed","beforedispatch","dispatch");a.mixins.observable.constructor.call(a);Ext.override(Ext.app.Application,{enableRouter:true,onBeforeLaunch:function(){this.callOverridden();if(this.enableRouter){CV.ux.Router.init(this)}}})});Ext.define("CV.ux.HeaderFilters",{ptype:"gridheaderfilters",alternateClassName:["CV.ux.grid.HeaderFilters","CV.ux.grid.header.Filters"],requires:["Ext.container.Container","Ext.tip.ToolTip"],grid:null,fields:null,containers:null,storeLoaded:false,filterFieldCls:"x-gridheaderfilters-filter-field",filterContainerCls:"x-gridheaderfilters-filter-container",filterRoot:"data",tooltipTpl:'{[Ext.isEmpty(values.filters) ? this.text.noFilter : "<b>"+this.text.activeFilters+"</b>"]}<br><tpl for="filters"><tpl if="value != \'\'">{[values.label ? values.label : values.property]} = {value}<br></tpl></tpl>',lastApplyFilters:null,bundle:{activeFilters:"Active filters",noFilter:"No filter"},stateful:true,reloadOnChange:true,ensureFilteredVisible:true,enableTooltip:true,statusProperty:"headerFilters",rendered:false,constructor:function(a){if(a){Ext.apply(this,a)}},init:function(a){this.grid=a;if(!a.headerFilters){a.headerFilters={}}if(Ext.isBoolean(a.statefulHeaderFilters)){this.setStateful(a.statefulHeaderFilters)}this.grid.addEvents("headerfilterchange","headerfiltersrender","beforeheaderfiltersapply","headerfiltersapply");this.grid.on({scope:this,columnresize:this.resizeFilterContainer,beforedestroy:this.onDestroy,beforestatesave:this.saveFilters,afterlayout:this.adjustFilterWidth});this.grid.headerCt.on({scope:this,afterrender:this.renderFilters});this.grid.getStore().on({scope:this,load:this.onStoreLoad});if(this.reloadOnChange){this.grid.on("headerfilterchange",this.reloadStore,this)}if(this.stateful){this.grid.addStateEvents("headerfilterchange")}Ext.apply(this.grid,{headerFilterPlugin:this,setHeaderFilter:function(c,d){if(!this.headerFilterPlugin){return}var b={};b[c]=d;this.headerFilterPlugin.setFilters(b)},getHeaderFilters:function(){if(!this.headerFilterPlugin){return null}return this.headerFilterPlugin.getFilters()},setHeaderFilters:function(b){if(!this.headerFilterPlugin){return}this.headerFilterPlugin.setFilters(b)},getHeaderFilterField:function(b){if(!this.headerFilterPlugin){return}if(this.headerFilterPlugin.fields[b]){return this.headerFilterPlugin.fields[b]}else{return null}},resetHeaderFilters:function(){if(!this.headerFilterPlugin){return}this.headerFilterPlugin.resetFilters()},clearHeaderFilters:function(){if(!this.headerFilterPlugin){return}this.headerFilterPlugin.clearFilters()},applyHeaderFilters:function(){if(!this.headerFilterPlugin){return}this.headerFilterPlugin.applyFilters()}})},saveFilters:function(b,a){a[this.statusProperty]=(this.stateful&&this.rendered)?this.parseFilters():b[this.statusProperty]},setFieldValue:function(c,b){var a=c.column;if(!Ext.isEmpty(b)){c.setValue(b);if(!Ext.isEmpty(b)&&a.hideable&&!a.isVisible()&&!c.isDisabled()&&this.ensureFilteredVisible){a.setVisible(true)}}else{c.setValue("")}},renderFilters:function(){this.destroyFilters();this.fields={};this.containers={};var a=this.grid.headerFilters;if(this.stateful&&this.grid[this.statusProperty]&&!this.grid.ignoreSavedHeaderFilters){Ext.apply(a,this.grid[this.statusProperty])}var b=this.parseStoreFilters();a=Ext.apply(b,a);var g=this.grid.headerCt.getGridColumns(true);for(var l=0;l<g.length;l++){var f=g[l];if(f.filter){var h={itemId:f.id+"-filtersContainer",cls:this.filterContainerCls,layout:"anchor",bodyStyle:{"background-color":"transparent"},border:false,width:f.getWidth(),listeners:{scope:this,element:"el",mousedown:function(c){c.stopPropagation()},click:function(c){c.stopPropagation()},keydown:function(c){c.stopPropagation()},keypress:function(c){c.stopPropagation();if(c.getKey()==Ext.EventObject.ENTER){this.onFilterContainerEnter()}},keyup:function(c){c.stopPropagation()}},items:[]};var j=[].concat(f.filter);for(var n=0;n<j.length;n++){var d=j[n];Ext.applyIf(d,{filterName:f.dataIndex,fieldLabel:f.text||f.header,hideLabel:j.length==1});var m=Ext.isEmpty(a[d.filterName])?null:a[d.filterName];Ext.apply(d,{cls:this.filterFieldCls,itemId:d.filterName,anchor:"-1"});var k=Ext.ComponentManager.create(d);k.column=f;this.setFieldValue(k,m);this.fields[k.filterName]=k;h.items.push(k)}var e=Ext.create("Ext.container.Container",h);e.render(f.el);this.containers[f.id]=e;f.setPadding=Ext.Function.createInterceptor(f.setPadding,function(c){return false})}}if(this.enableTooltip){this.tooltipTpl=new Ext.XTemplate(this.tooltipTpl,{text:this.bundle});this.tooltip=Ext.create("Ext.tip.ToolTip",{target:this.grid.headerCt.el,renderTo:Ext.getBody(),html:this.tooltipTpl.apply({filters:[]})});this.grid.on("headerfilterchange",function(c,p){var o=p.filterBy(function(q){return !Ext.isEmpty(q.value)});this.tooltip.update(this.tooltipTpl.apply({filters:o.getRange()}))},this)}this.applyFilters();this.rendered=true;this.grid.fireEvent("headerfiltersrender",this.grid,this.fields,this.parseFilters())},onStoreLoad:function(){this.storeLoaded=true},onFilterContainerEnter:function(){this.applyFilters()},resizeFilterContainer:function(e,c,a,d){if(!this.containers){return}var b=this.containers[c.id];if(b){b.setWidth(a);b.doLayout()}},destroyFilters:function(){this.rendered=false;if(this.fields){for(var a in this.fields){Ext.destroy(this.fields[a])}delete this.fields}if(this.containers){for(var b in this.containers){Ext.destroy(this.containers[b])}delete this.containers}},onDestroy:function(){this.destroyFilters();Ext.destroy(this.tooltip,this.tooltipTpl)},adjustFilterWidth:function(){if(!this.containers){return}var a=this.grid.headerCt.getGridColumns(true);for(var d=0;d<a.length;d++){var b=a[d];if(b.filter&&b.flex){this.containers[b.id].setWidth(b.getWidth()-1)}}},resetFilters:function(){if(!this.fields){return}for(var a in this.fields){var b=this.fields[a];if(!b.isDisabled()&&!b.readOnly&&Ext.isFunction(b.reset)){b.reset()}}this.applyFilters()},clearFilters:function(){if(!this.fields){return}for(var a in this.fields){var b=this.fields[a];if(!b.isDisabled()&&!b.readOnly){b.setValue("")}}this.applyFilters()},setFilters:function(a){if(!a){return}if(Ext.isArray(a)){var b={};Ext.each(a,function(c){if(c.property){b[c.property]=c.value}});a=b}else{if(!Ext.isObject(a)){return}}this.initFilterFields(a);this.applyFilters()},getFilters:function(){var c=this.parseFilters();var a=new Ext.util.MixedCollection();for(var b in c){var d=c[b];var e=this.fields[b];a.add(new Ext.util.Filter({property:b,value:d,root:this.filterRoot,label:e.fieldLabel}))}return a},parseFilters:function(){var b={};if(!this.fields){return b}for(var a in this.fields){var c=this.fields[a];if(!c.isDisabled()&&c.isValid()){b[c.filterName]=c.getSubmitValue()}}return b},initFilterFields:function(b){if(!this.fields){return}for(var a in b){var c=b[a];var d=this.fields[a];if(d){this.setFieldValue(d,c)}}},countActiveFilters:function(){var c=this.parseFilters();var a=0;for(var b in c){if(!Ext.isEmpty(c[b])){a++}}return a},parseStoreFilters:function(){var b=this.grid.getStore().filters;var a={};b.each(function(d){var c=d.property;var e=d.value;if(c&&e){a[c]=e}});return a},applyFilters:function(){var a=this.parseFilters();if(this.grid.fireEvent("beforeheaderfiltersapply",this.grid,a,this.grid.getStore())!==false){var b=this.grid.getStore().filters;var l=b.clone();var g=false;var c=0;for(var h in a){var k=a[h];var d=b.findBy(function(m){return m.property==h});if(Ext.isEmpty(k)){if(d){b.remove(d);g=true}}else{var j=this.fields[h];if(!d||d.value!=a[h]){var e=new Ext.util.Filter({root:this.filterRoot,property:h,value:a[h],label:j.fieldLabel});if(d){b.remove(d)}b.add(e);g=true}c++}}this.grid.fireEvent("headerfiltersapply",this.grid,a,c,this.grid.getStore());if(g){var f=this.getFilters();this.grid.fireEvent("headerfilterchange",this.grid,f,this.lastApplyFilters,c,this.grid.getStore());this.lastApplyFilters=f}}},reloadStore:function(){var a=this.grid.getStore();if(this.grid.getStore().remoteFilter){if(this.storeLoaded){a.currentPage=1;a.load()}}else{if(a.filters.getCount()){if(!a.snapshot){a.snapshot=a.data.clone()}else{a.currentPage=1}a.data=a.snapshot.filter(a.filters.getRange());var b=a.sortOnFilter&&!a.remoteSort;if(b){a.sort()}if(!b||a.sorters.length<1){a.fireEvent("datachanged",a)}}else{if(a.snapshot){a.currentPage=1;a.data=a.snapshot.clone();delete a.snapshot;a.fireEvent("datachanged",a)}}}}});Ext.define("CV.view.CvTabs",{extend:"Ext.tab.Panel",alias:"widget.cvtabs",title:"Summary",collapsible:true,split:true,height:"60%",activeItem:0,items:[],listeners:{tabchange:function(a,c,b){if(c.reloadStore){c.reload();c.reloadStore=false}}},clear:function(){var b,a;for(b=this.items.items.length;b>0;b--){a=this.items.items[b-1];a.store.fireEvent("beforedestroy",a.store);a.destroy()}},reload:function(){var a=this.getActiveTab();this.items.each(function(b){if(a===b){b.reload()}})},constructor:function(){this.callParent(arguments)},initComponent:function(){this.addEvents({tabcollapse:true,tabexpand:true});this.callParent(arguments)}});Ext.define("CV.model.ControlledVocabulary",{extend:"Ext.data.Model",fields:["name","cv_id","dsid","title","get"]});Ext.define("CV.store.ControlledVocabularies",{extend:"Ext.data.Store",requires:["CV.config.ChadoViewer"],model:"CV.model.ControlledVocabulary",proxy:{type:"ajax",reader:{type:"json"},extraParams:{filters:null,facets:null}},constructor:function(){Ext.Object.merge(this,{proxy:{url:CV.config.ChadoViewer.self.baseUrl}});this.callParent(arguments)},changeExtraParams:function(a){if(a.graph.vocabulary){this.getProxy().extraParams=Ext.clone(a.graph.vocabulary)}}});Ext.define("CV.model.CvTerm",{extend:"Ext.data.Model",requires:["CV.config.ChadoViewer"],fields:["dsid","term","vocabulary","value","selection"]});Ext.define("CV.store.CvTerms",{extend:"Ext.data.Store",model:"CV.model.CvTerm",requires:["CV.config.ChadoViewer"],autoLoad:false,proxy:{type:"ajax",reader:{type:"json",successProperty:false,totalProperty:false}},constructor:function(a){Ext.Object.merge(this,{proxy:{url:CV.config.ChadoViewer.self.baseUrl,type:"ajax"}});this.callParent(arguments)},changeExtraParams:function(a){if(a.cv.extraParams){this.getProxy().extraParams=Ext.clone(a.cv.extraParams)}}});Ext.define("CV.model.Facet",{extend:"Ext.data.Model",fields:["property","cvterm_id","name","cv_id"],idProperty:"cvterm_id"});Ext.define("CV.view.MultiViewPanel",{extend:"Ext.panel.Panel",alias:"widget.multiviewpanel",active:null,initComponent:function(){var h=[],d={items:[]},f=this,k,g,j,e,l,a,b,c;if(this.items){for(g=0;g<this.items.length;g++){k=this.items[g];j=k.menuTitle;l=this.addComp(k);d.items.push({text:j,handle:l,});delete k.title}d.items[0].checked=true;a=this.items[0]}b=this.prependText||"View: ";delete this.prependText;e=Ext.create("Ext.button.Cycle",{prependText:b,showText:true,menu:d,changeHandler:this.changeHandler});if(!this.tbar){this.tbar=[]}else{if(!this.tbar.hasOwnProperty("length")){this.tbar=[this.tbar]}}this.tbar.push(e);Ext.apply(this,{autoDestroy:false,items:[a],layout:"card",active:this.items[0]});this.callParent(arguments)},addComp:function(a){var b=this;return function(){b.active=a;b.layout.setActiveItem(a)}},changeHandler:function(a,b){b.handle()}});Ext.define("CV.view.RawData",{extend:"Ext.grid.Panel",alias:"widget.rawdatapanel",menuTitle:"Raw data",requires:["CV.ux.HeaderFilters"],maxCategories:Number.MAX_VALUE,viewConfig:{loadMask:false},columnLines:true,columns:[],setThreshold:function(a){a.setThreshold(1)},listeners:{},initComponent:function(){this.callParent(this)}});Ext.define("CV.view.MetaData",{extend:"Ext.grid.Panel",alias:"widget.metadatapanel",title:"Metadata",region:"center",columnLines:true,store:"CV.store.CvTerms",columns:[{text:"Key",dataIndex:"vocabulary",type:"string",flex:1,renderer:function(a){return'<div style="white-space:normal !important;">'+a+"</div>"}},{text:"Value",dataIndex:"term",type:"string",flex:1,renderer:function(a){return'<div style="white-space:normal !important;">'+a+"</div>"}},{text:"Selection",dataIndex:"selection",type:"string",flex:1,renderer:function(a){return'<div style="white-space:normal !important;">'+a+"</div>"}}],constructor:function(){var a=this.store;if(Ext.isString(a)){a=this.store=Ext.create(a)}Ext.Object.merge(this.store.proxy,{url:CV.config.ChadoViewer.self.baseUrl});this.callParent(arguments)},afterRender:function(){var a=this.up("dsview"),b=this.store.getProxy();Ext.Object.merge(this.store.proxy,{extraParams:a.dsConfig.cv.extraParams});this.callParent(arguments)},filter:function(e,c){if(!this.features||!e){return}var b=this.features[0],a,d={};a=this.filters.getFilter(e);if(!a){b.createFilters();a=this.filters.getFilter(e);if(!a){console.log("no filter is available for the id"+e);return}}d.eq=c;a.setValue(d);a.setActive(true)},clear:function(){this.store.removeAll()}});Ext.define("CV.view.feature.Grid",{extend:"Ext.grid.Panel",alias:"widget.featuregrid",hideHeaders:false,title:"Features",store:"CV.store.Features",columnLines:true,requires:["CV.ux.HeaderFilters"],height:400,displayInfo:true,layout:"fit",initComponent:function(){var a=this;if(typeof this.store==="string"){this.store=Ext.create(this.store)}Ext.apply(this,{events:["clearfilter"],plugins:[Ext.create("CV.ux.Retry",{})],bbar:[{xtype:"pagingtoolbar",store:this.store,displayInfo:true,inputItemWidth:80}],tbar:[{text:"Search",tooltip:"Search using Id number",handler:function(){Ext.Msg.prompt("Search","Please enter an Id for search:",function(b,c){if(b=="ok"&&c){a.store.clearFilter(true);a.store.filter("name",c)}})}},{text:"Clear",handler:function(c){var b=c.up("grid");a.store.clearFilter();b.fireEvent("clearfilter")}},{text:"Selected filters",tooltip:"Display all active filters",handler:function(d){var c=d.up("grid"),g=c.store.filters,b,f=[],e;msg="";g&&g.each(function(h){if(h.property!="feature_id"){f.push(h.property+" : "+h.value)}});Ext.Msg.alert("Active Filter(s)",f.join(","))}}]});this.callParent(arguments)},columns:[{text:"Feature id",dataIndex:"feature_id",hidden:true,type:"numeric"},{text:"Name",dataIndex:"name",filter:{xtype:"textfield"},flex:1,renderer:function(b,c,a){var d="";if(b){d='<a href="#feature/'+a.get("feature_id")+'">'+b+"</a> "}return d}},{text:"Unique name",dataIndex:"uniquename",hidden:true},{text:"Type",dataIndex:"type",filter:{xtype:"textfield"}},{text:"Genus",dataIndex:"genus",filter:{xtype:"textfield"},renderer:function(c,d,a){var e="";if(c){var b=[{id:a.get("organism_id"),type:"species",text:c}];e='<a href="#library/'+encodeURI(JSON.stringify(b))+'">'+c+"</a> "}return e}},{text:"Species",dataIndex:"species",filter:{xtype:"textfield"},renderer:function(c,d,a){var e="";if(c){var b=[{id:a.get("organism_id"),type:"species",text:c}];e='<a href="#library/'+encodeURI(JSON.stringify(b))+'">'+c+"</a> "}return e}},{text:"Sequence Length",dataIndex:"seqlen",sortable:false},{text:"Library name",dataIndex:"libraries",sortable:false,filter:{xtype:"textfield"},renderer:function(c,d,a){var e="";if(c){var b=[{id:a.get("library_id"),type:"library",text:c}];e='<a href="#library/'+encodeURI(JSON.stringify(b))+'" onclick="return false">'+c+"</a> "}return'<div style="white-space:normal !important;">'+e+"</div>"},flex:1},{text:"Source feature",sortable:false,dataIndex:"srcuniquename",filter:{xtype:"textfield"},flex:1}]});Ext.define("CV.model.Feature",{extend:"Ext.data.Model",fields:[{name:"feature_id",type:"auto"},"name","uniquename","dbxref_id","dbxref_name","organism_id","organism_name","seqlen","cvterm_id","type","genus","species",{name:"libraries",type:"string",convert:function(f,a){var h="",e=a.raw.libraries,c,b=[],g;if(e){for(c=0;c<e.length;c++){g=e[c];var d=[{id:g.library_id,type:"library",text:g.library_name}];b.push('<a href="#library/'+encodeURI(JSON.stringify(d))+'">'+g.library_name+"</a>")}}return b.join(" , ")}},{name:"srcuniquename",type:"string",convert:function(e,a){var g="",d=a.raw.sources,c,b=[],f;if(d){for(c=0;c<d.length;c++){f=d[c];b.push('<a href="#feature/'+f.feature_id+"/"+f.uniquename+'">'+f.uniquename+"</a>")}}return b.join(" , ")}}]});Ext.define("CV.store.FeatureMetadata",{extend:"Ext.data.Store",model:"CV.model.CvTerm",requires:["CV.config.ChadoViewer"],autoLoad:false,proxy:{type:"ajax",extraParams:{ds:"feature",type:"cv",feature_id:0},reader:{type:"json",root:"root",successProperty:false,totalProperty:false}},constructor:function(){Ext.Object.merge(this.proxy,{url:CV.config.ChadoViewer.self.baseUrl});this.callParent(arguments)}});Ext.define("CV.view.feature.CvTermsGrid",{extend:"Ext.grid.Panel",alias:"widget.cvtermsgrid",store:"CV.store.FeatureMetadata",split:true,title:"Metadata",columnLines:true,columns:[{text:"Key",dataIndex:"term",flex:1,renderer:function(a){return'<div style="white-space:normal !important;">'+a+"</div>"}},{text:"Value",dataIndex:"value",flex:1,renderer:function(a){return'<div style="white-space:normal !important;">'+a+"</div>"}}],initComponent:function(){Ext.apply(this,{plugins:[Ext.create("CV.ux.Retry")]});this.callParent(arguments)}});Ext.define("CV.view.feature.Fasta",{extend:"Ext.panel.Panel",alias:"widget.fastacontainer",title:"Sequence",url:null,layout:"fit",downloadId:"downloadFasta",extraParams:null,initComponent:function(){this.url=CV.config.ChadoViewer.self.baseUrl;this.extraParams=CV.config.ChadoViewer.self.feature.fasta;this.get();Ext.apply(this,{plugins:[Ext.create("CV.ux.Retry")],tbar:[{xtype:"box",id:this.downloadId,autoEl:{tag:"a",href:this.getQueryString(),html:"Download"},listeners:{boxready:this.setDownload,scope:this}}]});this.callParent(arguments)},getQueryString:function(){return this.url+"?"+Ext.Object.toQueryString(this.extraParams)},setDownload:function(){var a=Ext.get(this.downloadId);a&&a.set({href:this.getQueryString()})},get:function(){if(this.extraParams.feature_id){Ext.Ajax.request({url:this.url,params:this.extraParams,success:function(b){var a=b.responseText;this.setFasta(a)},scope:this})}},setFasta:function(a){this.update("<pre>"+a+"</pre>")},load:function(a){this.extraParams.feature_id=a;this.get();this.setDownload()},getFeature:function(){return this.extraParams.feature_id}});Ext.define("CV.ux.RetryLoader",{extend:"Ext.LoadMask",msgCls:"customLoading",msg:"Connection error! Click here to retry.",events:["elementscreated"],linkedStore:null,tapLoad:function(){this.linkedStore&&this.linkedStore.reload()},afterRender:function(){var a;this.callParent(arguments);if(this.rendered){a=this.getTargetEl();a&&a.on({click:this.tapLoad,scope:this})}}});Ext.define("CV.ux.InformationLoader",{extend:"Ext.LoadMask",msgCls:"information-loader",msg:undefined});Ext.define("CV.view.InputSlider",{extend:"Ext.slider.Single",sliderField:null,initComponent:function(){this.callParent(arguments)},onRender:function(){this.callParent(arguments);Ext.DomHelper.insertAfter(this.el,{tag:"div",id:this.id+"_slidertextdiv",style:"position: relative; float:right;width:60px;height:20px;margin-left:5px;margin-right:90px"});this.sliderField=new Ext.form.field.Text({renderTo:this.id+"_slidertextdiv",id:this.id+"_slidertext",name:this.name+"_slidertext",value:this.value,enableKeyEvents:true,width:60,scope:this,listeners:{change:function(){this.adjustValue(this)},keyup:function(b,a){a.stopPropagation()},scope:this}})},adjustValue:function(){Ext.getDom(this.id+"_slidertext").value=v;this.setValue(this.sliderField.getValue());this.sliderField.clearInvalid()},setValue:function(a){this.callParent(arguments);if(this.rendered){Ext.getDom(this.id+"_slidertext").value=a}},});Ext.define("CV.ux.ThresholdFinder",{countField:"total",getThreshold:function(a){return this.getNewThreshold()},getNewThreshold:function(){var d=Number.MAX_VALUE,c,e=this,b=[],a=this.cloneStore();a.sort(this.countField,"DESC");a.clearFilter();a.each(function(f){b.push(f)});Ext.each(b,function(f){c=d;d=f.get(e.countField);if(d!=c){a.filterBy(e.filterFn(d),e);if(a.getCount()>=e.maxCategories){d=c;return false}a.clearFilter()}});return d},filterFn:function(a){return function(b){return b.get(this.countField)>=a}},setThreshold:function(b){var a=this.getThreshold();this.store.suspendEvents();this.store.filterBy(this.filterFn(b.threshold));this.store.resumeEvents();a&&b.setThreshold(a);this.refresh&&this.refresh()},cloneStore:function(){var b=[];this.store.clearFilter(true);this.store.each(function(c){if(c.get("name")!="Others"){b.push(c.copy())}});var a=new Ext.data.Store({model:this.store.model});a.add(b);return a}});Ext.define("CV.view.GenomeBrowser",{extend:"Ext.panel.Panel",alias:"widget.genomebrowser",title:"Sequence Browser",gheight:500,gwidth:600,canvasXpressPadding:10,canvasId:null,canvasData:null,canvasOptions:null,canvasXpress:null,errorMsg:"<b>Error: sequence not provided</b>",initComponent:function(){var a=this.id+"GenomeBrowser";Ext.apply(this,{canvasId:a,html:'<canvas id="'+a+'"  width="'+this.getGWidth()+'" height="'+this.getGHeight()+'" ></canvas>'});this.addListener("render",this.renderCanvas);this.addListener("resize",this.resizeHandler);this.callParent(arguments)},updateHtml:function(){this.update('<canvas id="'+this.canvasId+'"  width="'+this.getGWidth()+'" height="'+this.getGHeight()+'" ></canvas>')},renderCanvas:function(){if(this.canvasData&&this.canvasData.tracks[0].data[0].sequence){this.canvasXpress=new CanvasXpress(this.canvasId,this.canvasData,this.canvasOptions)}},loadCanvas:function(){this.canvasXpress&&this.canvasXpress.destroy();this.updateHtml();this.renderCanvas()},updateSize:function(c,a){var b=Ext.get(this.canvasId);b.setWidth(c);b.setHeight(a)},resizeHandler:function(){var b=this.body.getPadding("r"),a=this.body.getPadding("b");this.canvasXpress&&this.canvasXpress.draw(this.getWidth()-2*b-2*this.canvasXpressPadding,this.getHeight()-2*a-2*this.canvasXpressPadding)},getGWidth:function(){var a=this.body?this.body.getPadding("r"):this.canvasXpressPadding;return this.gwidth-2*a-2*this.canvasXpressPadding},getGHeight:function(){var a=this.body?this.body.getPadding("b"):this.canvasXpressPadding;return this.gheight-2*a-2*this.canvasXpressPadding}});Ext.define("CV.view.feature.SequenceView",{extend:"Ext.panel.Panel",alias:"widget.sequenceview",requires:"CV.view.feature.Fasta",height:"100%",width:"80%",defaults:{bodyStyle:"padding:15px",overflowY:"auto"},layout:{type:"accordion",titleCollapse:true,animate:true,activeOnTop:false},items:[{xtype:"fastacontainer",active:true}],addGenomeBrowser:function(e,b){var c=this.down("genomebrowser"),a=this.getHeight(),d=this.getWidth();if(c){c.canvasData=e;c.canvasOptions=b;c.loadCanvas()}else{this.add({xtype:"genomebrowser",canvasData:e,canvasOptions:b,gwidth:d,active:true});c=this.down("genomebrowser");c.expand()}}});Ext.define("CV.ux.StoreUtil",{changeExtraParams:function(a){if(a){this.getProxy().extraParams=Ext.clone(a)}}});Ext.define("CV.model.Library",{extend:"Ext.data.Model",fields:["text","id","type"],requires:["CV.config.ChadoViewer"],idProperty:"pid"});Ext.define("CV.ux.StatusMask",{requires:["CV.ux.RetryLoader","Ext.data.TreeStore","CV.ux.InformationLoader"],alias:"plugin.statusmask",owner:null,msg:"loading.. please wait :-)",useTargetEl:true,msgCls:"customLoading",loadFn:null,constructor:function(a){if(a){Ext.apply(this,a)}this.loadFn=this.store instanceof Ext.data.TreeStore?this.treeLoad:this.gridLoad;this.callParent(arguments)},init:function(a){var c=this.store,b=a;this.owner=b;this.store&&this.store.on({beforeload:this.setLoading,load:this.loadFn,scope:this});b.addListener("beforecollapse",function(){var d=this.placeholderCollapse;if(this.isPlaceHolderCollapse()){this.placeholderCollapse=function(){d.apply(this,arguments);this.getHierarchyState().collapsed=true;this.fireHierarchyEvent("collapse");this.placeholderCollapse=d}}},b);b.addListener("beforeexpand",function(){var d=this.placeholderExpand;if(this.isPlaceHolderCollapse()){this.placeholderExpand=function(){d.apply(this,arguments);this.afterExpand.apply(this,arguments);this.placeholderExpand=d}}},b);b.addListener("beforedestroy",this.beforeDestroy,this)},beforeDestroy:function(){if(this.owner){this.store.removeListener("beforeload",this.setLoading,this);this.store.removeListener("load",this.loadFn,this)}this.loader&&this.loader.destroy()},setLoading:function(){this.loader&&this.loader.destroy();this.owner&&this.owner.setLoading(true);this.loader=this.owner.loadMask},bindComponent:function(a){if(!a){return}this.callParent(arguments)},treeLoad:function(b,a,d,c){this.storeLoadMsg(c)},gridLoad:function(b,a,c){this.storeLoadMsg(c)},storeLoadMsg:function(a){this.success=a;this.loader&&this.loader.destroy();if(!a){this.msg=null;this.displayMsg()}else{this.isEmpty()}},isEmpty:function(){var a=false;if(this.store){switch(this.store instanceof Ext.data.TreeStore){case true:if(!this.store.getRootNode().hasChildNodes()){a=true}break;case false:if(!this.store.getCount()){a=true}break}if(a){this.msg="The data set is empty";this.showMsg()}}},showMsg:function(){this.loader&&this.loader.destroy();this.loader=new CV.ux.InformationLoader(this.owner,{msg:this.msg,useTargetEl:true});this.loader.show()},displayMsg:function(){var a;if(!this.success){a={};a.linkedStore=this.store;a.useTargetEl=this.useTargetEl;this.msg?a.msg=this.msg:null;this.loader=new CV.ux.RetryLoader(this.owner,a);this.loader.show()}},reload:function(){this.loader&&this.loader.destroy();this.owner.store.load()},hide:function(){this.loader&&this.loader.hide()},show:function(){this.loader&&this.loader.show();this.callParent(arguments)}});Ext.define("CV.store.Facets",{extend:"Ext.data.Store",model:"CV.model.Facet",idProperty:"cvterm_id",getFacets:function(){var a=[];this.each(function(b){a.push({property:"cvterm_id",value:b.get("cvterm_id"),cv_id:b.get("cv_id")})});return a}});Ext.define("CV.view.Facets",{extend:"Ext.grid.Panel",alias:"widget.facetsgrid",requires:["CV.store.Facets"],title:"Facets",collapsed:true,collapsible:true,region:"east",store:"CV.store.Facets",columns:[{text:"Name",dataIndex:"name",flex:3},{xtype:"actioncolumn",text:"Action",flex:1,align:"center",items:[{icon:"extjs/examples/writer/images/delete.png",tooltip:"Delete",handler:function(b,c,a){b.getStore().removeAt(c)}}]}]});Ext.define("CV.view.ChadoPanel",{extend:"CV.view.MultiViewPanel",requires:["CV.view.InputSlider"],alias:"widget.chadopanel",threshold:Number.MIN_VALUE,othersRec:null,countField:"total",othersName:"Others",othersObj:{cvterm_id:0,},nameField:"name",minValue:null,maxValue:null,store:null,slider:null,sliderNumberField:null,initComponent:function(){var c,b=this;this.addEvents({filtercomplete:true,setthreshold:true,processed:true});c=Ext.create("Ext.slider.Single",{width:200,fieldLabel:this.fieldValue,increment:1,listeners:{changecomplete:this.setValue,scope:this}});this.slider=c;this.sliderNumberField=Ext.create("Ext.form.field.Number",{padding:"5 5 0 5",width:30,hideTrigger:true,listeners:{change:this.setValue,scope:this}});this.store.addListener("load",this.setSlider,this);this.store.addListener("beforeload",this.loadingOn,this);this.addListener("processed",this.loadingOff,this);this.othersObj[this.countField]=0;this.othersObj[this.nameField]=this.othersName;this.othersRec=this.store.getProxy().getModel().create(this.othersObj);for(i=0;i<this.items.length;i++){var a=this.items[i];a.filter=false;if(a.addListener){a.refresh&&a.addListener("beforeshow",a.refresh,a);a.addListener("show",b.checkCategories,a);a.addListener("beforerefresh",b.checkCategories,a)}else{a.listeners=a.listeners||{};a.listeners.show=b.checkCategories;a.listeners.beforerefresh=b.checkCategories;a.scope=a}}this.listeners=this.listeners||{};Ext.apply(this.listeners,{render:function(d){d.store&&d.store.load()},filtercomplete:function(){this.items.each(function(d){d.filter=true})}});Ext.apply(this,{tbar:[{xtype:"buttongroup",title:"Cutoff",items:[c,this.sliderNumberField,{xtype:"button",text:"Optimize",handler:function(){b.active.setThreshold(b)}}]}]});this.callParent(arguments)},loadingOn:function(){this.setLoading(true)},loadingOff:function(){this.setLoading(false)},shouldRefresh:function(){if(!this.filter){return false}return true},checkCategories:function(){if(this.maxCategories<this.store.getCount()){this.setLoading({msgCls:"customLoading",msg:"I cannot display more than "+this.maxCategories+" categories. Please increase the threshold value using the above slider or change to a different view."},true);return false}this.setLoading(false);return true},addOthers:function(b,a,c){if(c){this.store.loadRecords([this.othersRec],{addRecords:true})}},setFieldLabel:function(a,b){this.threshold=b},setSlider:function(h,b,j){var e,c,h,a=this.slider,g,d=this,f;if(j){f=this.store;f.clearFilter(true);f.remove([this.othersRec]);this.othersRec=this.othersRec=this.store.getProxy().getModel().create(this.othersObj);if(f.getCount()>0){c=e=f.getAt(0).get(this.countField);f.each(function(k){e=Math.max(e,k.get(d.countField));c=Math.min(c,k.get(d.countField))});g=Math.round((c+e)/2);this.setMinValue(c);this.setMaxValue(e);this.fireEvent("setthreshold")}}},filter:function(){var c=this.store,b=this.othersRec,h=this.threshold,g=this,a=0,f={},e,d;e=CV.config.ChadoViewer.getOnlyIds();e.push(g.countField);for(d in e){f[e[d]]=0}c.suspendEvents(true);c.clearFilter(true);c.filter(function(k){var j=k.get(g.countField);if(k.get(g.nameField)===g.othersName){return true}if(j<h){for(d in f){f[d]+=k.get(d)}return false}return true});for(d in f){b.set(d,f[d])}c.add([this.othersRec]);c.resumeEvents();this.fireEvent("filtercomplete")},setThreshold:function(a){var b;if(a!==undefined){this.slider.setValue(a);b=this.slider.getValue();this.setFieldLabel(this.slider,b);this.sliderNumberField.suspendEvents();this.sliderNumberField.setValue(b);this.sliderNumberField.resumeEvents();this.filter();this.fireEvent("processed")}},clear:function(){this.store.removeAll()},setValue:function(a,b){if(b>=this.slider.minValue){this.setThreshold(b)}},setMaxValue:function(a){this.maxValue=a;this.slider.setMaxValue(a);this.sliderNumberField.setMaxValue(a)},setMinValue:function(a){this.minValue=a;this.slider.setMinValue(a);this.sliderNumberField.setMinValue(a)},reload:function(){this.store&&this.store.load();this.items.each(function(a){a.filter=true})},setMessage:function(){if(this.store.count()==0){this.el.mask("No entry found in database!","x-mask-loading")}else{this.el&&this.el.unmask()}}});Ext.define("CV.view.PieChart",{extend:"Ext.chart.Chart",alias:"widget.pieview",mixins:["CV.ux.ThresholdFinder"],menuTitle:"Pie Chart",animate:true,theme:"Base:gradients",height:400,width:600,countField:"total",legend:{position:"left"},initComponent:function(){this.addEvents("itemclicked");this.callParent(arguments)},overflowY:"auto",maxCategories:10,series:[{type:"pie",field:"total",showInLegend:true,tips:{trackMouse:true,maxWidth:140,minWidth:80,renderer:function(b,a){this.setTitle(b.get("name")+" : "+b.get(a.series.field))}},highlight:{segment:{margin:20}},listeners:{itemclick:function(a){this.chart.fireEvent("itemclicked",a.storeItem)}}}]});Ext.define("CV.view.BarChart",{extend:"Ext.chart.Chart",alias:"widget.libraryBar",mixins:["CV.ux.ThresholdFinder"],bottomAxeTitleText:"Terms",leftAxeTitleText:"Count",menuTitle:"Bar Chart",theme:"Red:gradients",legend:{position:"top"},maxCategories:20,titles:null,onBindStore:function(a){if(a){a.addListener({})}},onUnbindStore:function(a){if(a){a.removeListener({})}},autoDestroy:false,loadingOn:function(){this.setLoading(true)},loadingOff:function(){this.setLoading(false)},initComponent:function(){Ext.apply(this,{region:"south",height:400,axes:[{type:"Numeric",position:"left",label:{renderer:Ext.util.Format.numberRenderer("0,0")},title:this.leftAxeTitleText,grid:true,minimum:0},{type:"Category",position:"bottom",fields:["name"],title:this.bottomAxeTitleText,label:{renderer:function(){return""}}}],series:[{type:"column",axis:"left",highlight:true,showInLegend:true,tips:{trackMouse:true,width:140,renderer:function(b,a){this.setTitle(b.get("name")+" - "+b.get(a.yField)+" <br/><i>("+b.get("highername")[a.yField]+")</i>")}},label:{display:"insideEnd",field:"left",renderer:Ext.util.Format.numberRenderer("0"),orientation:"horizontal",color:"#333","text-anchor":"middle"},xField:"name",yField:this.yField,title:this.titles,listeners:{itemclick:function(a){this.chart.fireEvent("itemclicked",a.storeItem)}}}]});delete this.yField;this.addEvents("itemclicked");this.callParent(arguments)}});Ext.define("CV.view.feature.View",{extend:"Ext.container.Container",alias:"widget.featureview",requires:["CV.view.feature.Grid","CV.view.GenomeBrowser","CV.view.feature.SequenceView"],region:"center",layout:"border",hideBorders:true,initComponent:function(){var c=Ext.create("CV.store.Features"),f,e,a;var d=Ext.create("CV.view.feature.Grid",{store:c,region:"north"});f=Ext.create("CV.store.FeatureMetadata");var b=Ext.create("CV.view.feature.CvTermsGrid",{store:f,region:"center"});e=Ext.create("CV.view.feature.SequenceView",{region:"west",disabled:true});Ext.apply(this,{items:[d,b,e]});this.callParent(arguments)},addGenomeBrowser:function(c,b){var a=Ext.create("CV.view.GenomeBrowser",{region:"south",canvasData:c,canvasOptions:b});this.add(a)},onRemoved:function(){this.callParent(arguments);var b=this.query("component"),a;for(a=0;a<b.length;a++){b[a].events.hideMask&&b[a].fireEvent("hideMask")}},onAdded:function(){this.callParent(arguments);var b=this.query("component"),a;for(a=0;a<b.length;a++){b[a].events.hideMask&&b[a].fireEvent("displayMask")}}});Ext.define("CV.store.Features",{extend:"Ext.data.Store",model:"CV.model.Feature",requires:["CV.config.ChadoViewer","CV.ux.StoreUtil"],idProperty:"feature_id",autoLoad:false,remoteFilter:true,remoteSort:true,pageSize:35,proxy:{type:"ajax",extraParams:{type:"list",view:"feature",ds:"feature",id:null,facets:null},reader:{type:"json",root:"data"}},constructor:function(){Ext.Object.merge(this.proxy,{url:CV.config.ChadoViewer.self.baseUrl});this.callParent(arguments)},changeExtraParams:function(a){if(a.feature.extraParams){this.getProxy().extraParams=Ext.clone(a.feature.extraParams)}}});Ext.define("CV.view.TagCloud",{extend:"Ext.container.Container",menuTitle:"Tag Cloud",alias:"widget.tagcloud",mixins:["CV.ux.ThresholdFinder"],svgId:null,baseSize:10,layout:"fit",initialMaxSize:30,countField:"total",delayedMaxCalc:false,maxSize:30,height:"100%",width:"100%",maxCategories:Number.MAX_VALUE,redrawn:true,delayedRefresh:false,filter:false,styleHtmlContent:true,initComponent:function(){var a;this.svgId=this.id+"svg";this.clear();this.addEvents("itemclicked");this.addListener("show",this.checkAndDraw,this);this.addListener("activate",this.delayDraw,this);this.addListener("afterrender",this.checkAndDraw,this);this.callParent(arguments)},calcMaxSize:function(){var a;if(!this.isHidden()&&this.rendered){a=Math.sqrt((this.getHeight()*this.getWidth())/this.totalLetters());if(a<this.initialMaxSize){this.maxSize=a}this.delayedMaxCalc=false}else{this.delayedMaxCalc=true}},totalLetters:function(){var b=this.transform(this.getAllRecords(this.store)),a=0;Ext.each(b,function(c){var d=0;if(c.text){d=c.text.length}a+=d});return a},averageWordSize:function(){var b=this.totalLetters(),a=this.store.getCount();return b/a},delayDraw:function(){this.delayedMaxCalc=true;this.checkAndDraw()},draw:function(){this.setRedrawn();this.checkAndDraw()},setRedrawn:function(){this.redrawn=true},checkAndDraw:function(){if(this.filter&&!(this.isHierarchicallyHidden()||this.isHidden())){this.delayedMaxCalc&&this.calcMaxCategory();this.drawTags();this.filter=false}},clear:function(){this.update('<div id="'+this.svgId+'" ></div>')},drawTags:function(){var f=this.getAllRecords(this.store),d=this,e=d3.scale.category20(),c=d.getWidth(),b=d.getHeight();this.clear();var a=function(g){d3.select("#"+d.svgId).append("svg").attr("viewBox","0 0 "+c+" "+b).append("g").attr("transform","translate("+c/2+","+b/2+")").selectAll("text").data(g).enter().append("text").style("font-size",function(h){return h.size+"px"}).style("font-family","serif").style("fill",function(j,h){return e(h)}).style("cursor","pointer").attr("text-anchor","middle").attr("transform",function(h){return"translate("+[h.x,h.y]+")"}).on("click",function(h){d.fireEvent("itemclicked",h.storeItem)}).text(function(h){return h.text})};f=this.transform(f);f=this.normalizeSize(f);d3.layout.cloud().size([this.getWidth(),this.getHeight()]).words(f).rotate(function(){return 0}).font("serif").fontSize(function(g){return g.size}).on("end",a).start()},getAllRecords:function(b){var a=[];b.each(function(c){a.push(c)});return a},transform:function(e){var a=[],b,c;for(b in e){c=e[b];var d={text:c.get("name"),size:c.get(this.countField),storeItem:c};a.push(d)}return a},normalizeSize:function(e){var a=0,c=Number.MAX_VALUE,d=this,b=function(g){var f;if(g!=0&&a!=1){return Math.round(d.baseSize+(Math.log(g)/Math.log(a))*d.maxSize)}else{if(!g){return g}else{if(a){return d.maxSize}}}};Ext.each(e,function(f){if(a<f.size){a=f.size}if(c>f.size){c=f.size}});Ext.each(e,function(f){f.size=b(f.size,c)});return e},setThreshold:function(a){this.calcMaxCategory();this.mixins["CV.ux.ThresholdFinder"].setThreshold.apply(this,[a])},calcMaxCategory:function(){var a;if(!this.isHidden()&&this.rendered){this.maxCategories=Math.round(Math.sqrt((this.getHeight()*this.getWidth())/(this.averageWordSize()*(this.maxSize/2+this.baseSize/2))));this.delayedMaxCalc=false}else{this.delayedMaxCalc=true}}});Ext.define("CV.store.Libraries",{extend:"Ext.data.TreeStore",autoLoad:false,model:"CV.model.Library",root:{text:"root",hidden:true,expanded:true,children:[]},proxy:{type:"ajax",extraParams:{ds:"library",type:"tree"}},constructor:function(a){Ext.Object.merge(this.proxy,{url:CV.config.ChadoViewer.self.baseUrl});this.callParent(arguments)}});Ext.define("CV.view.Tree",{extend:"Ext.tree.Panel",alias:"widget.dstree",requires:["CV.store.Libraries"],title:"Catalogue",store:"CV.store.Libraries",collapsible:true,closeable:true,selModel:{mode:"MULTI"},region:"west",width:250,height:500,rootVisible:false,expandable:true,constructor:function(){if(typeof this.store==="string"){this.store=Ext.create(this.store)}this.callParent(arguments)},initComponent:function(){this.addPlugin({ptype:"statusmask",owner:this,store:this.store});this.callParent(arguments)},afterRender:function(){Ext.Object.merge(this.store.proxy,{extraParams:this.ownerCt.dsConfig.tree.extraParams});this.store.load();this.callParent(arguments)},clear:function(){this.getSelectionModel().deselectAll()}});Ext.define("CV.view.Viewport",{extend:"Ext.Viewport",layout:"fit",requires:["Ext.layout.container.Border","Ext.resizer.Splitter"],initComponent:function(){var f=this,g,e,a,b,d=[],c={text:"",uri:"",id:"Btn"};Ext.iterate(CV.controller,function(h,j){if(j.name!=="Help"){d.push(f.createButtonConfig(j))}});d.push({xtype:"tbfill"});d.push(this.createButtonConfig(CV.controller.Help));Ext.apply(f,{hideBorders:true,layout:"border",deferredRender:true,items:[{xtype:"radiogroup",region:"north",layout:"hbox",width:127,defaultType:"button",defaults:{scope:this,handler:this.onMenuItemClick,toggleGroup:"header",enableToggle:true,allowDepress:false},items:d},{xtype:"panel",id:"main_tabpanel",region:"center",layout:"card",defaults:{closable:true}}]});f.callParent(arguments)},createButtonConfig:function(b){var a={text:"",uri:"",id:"Btn"};b=b.prototype;a.name=b.name;a.text=b.text;a.uri=b.uri;a.id=b.uri+a.id;return a},autoLoad:false,onMenuItemClick:function(a){CV.ux.Router.redirect(a.uri)}});Ext.define("CV.controller.Feature",{extend:"Ext.app.Controller",models:["CV.model.Feature"],requires:["CV.config.ChadoViewer"],views:["CV.view.feature.View","CV.view.feature.Grid"],refs:[{ref:"feature",selector:"featureview"},{ref:"featureGrid",selector:"featureview featuregrid"},{ref:"metadataPanel",selector:"featureview cvtermsgrid"},{ref:"fastaPanel",selector:"featureview fastacontainer"},{ref:"genomePanel",selector:"featureview genomebrowser"},{ref:"sequencePanel",selector:"featureview sequenceview"}],name:"Feature",uri:"feature",text:"Feature",featureId:"id",filterProperty:"name",featureIdProp:"feature_id",item:null,init:function(){var a,b;b=Ext.create("CV.view.feature.View");b.show();this.control({"featureview featuregrid":{headerfilterchange:this.updateFilter,clearfilter:this.clearSelection,scope:this},"viewport > radiogroup > button[name=Feature]":{render:this.headerInit,scope:this}})},options:{graphType:"Genome",useFlashIE:true,backgroundType:"gradient",backgroundGradient1Color:"rgb(0,183,217)",backgroundGradient2Color:"rgb(4,112,174)",oddColor:"rgb(220,220,220)",evenColor:"rgb(250,250,250)",missingDataColor:"rgb(220,220,220)"},header:undefined,headerInit:function(a){this.header=a},show:function(d){var a=this.getFeature(),e=d.id,b=d.name,c;this.render(a);switch(e){case"filter":c=JSON.parse(decodeURIComponent(b));this.setFilters(c.items);break;default:this.treeSelect(e,b);break}},gridSelect:function(b,a){this.updateSelection(a.get("feature_id"),a.get("name"))},setFilters:function(b){var a=this.getFeatureGrid();a.headerFilterPlugin.setFilters(b);a.store.load()},updateFilter:function(b,d){var c=JSON.stringify(d),a=this.uri+"/filter/"+c;CV.ux.Router.redirect(a);return false},clearSelection:function(b,a){this.getSequencePanel().disable();this.updateSelection(b,a)},updateSelection:function(c,b){var a=this.uri;if(c&&b){a+="/"+c}CV.ux.Router.redirect(a)},treeSelect:function(g,c){var d,b,e={},a,f,h;h=g?"details":"start";d=this.getFeatureGrid();a=this.getMetadataPanel();f=this.getFastaPanel();this.item=g;switch(h){case"details":this.getSequencePanel().enable();d.store.clearFilter(true);d.store.filter(this.featureIdProp,g);a.store.getProxy().setExtraParam(this.featureIdProp,g);a.store.load();this.loadTracks(g);f.load(g);break;case"start":d.store.clearFilter(true);d.store.load();a.store.removeAll();f.setFasta("");break}},loadTracks:function(c){var a=this,b=function(f){var g=f.responseText,e,d;e=Ext.JSON.decode(g);console.log(e);this.data=e;this.renderTracks(this.data,this.options)};url=CV.config.ChadoViewer.self.drupalBase+CV.config.ChadoViewer.self.genomeviewer.url;Ext.Ajax.request({url:url+"?type=track&id="+c,success:b,scope:this})},renderTracks:function(a){this.getSequencePanel().addGenomeBrowser(a,this.options)}});Ext.define("CV.store.FeatureCount",{extend:"Ext.data.Store",requires:["CV.config.ChadoViewer"],constructor:function(a){Ext.apply(this,a);this.addEvents({beforedestroy:true});this.proxy.model=undefined;this.callParent(arguments)},idProperty:"cvterm_id",autoLoad:false,autoDestroy:true,proxy:{url:null,extraParams:{id:0,get:"cv_term",cv_id:0,filters:undefined,facets:undefined},type:"ajax",reader:"json"}});Ext.define("CV.view.help.View",{extend:"Ext.container.Container",alias:"widget.helpview",html:"write something here!!"});Ext.define("CV.ux.Retry",{requires:["CV.ux.RetryLoader"],ptype:"retry",owner:null,success:true,loader:null,loaderConfig:{msgCls:"customLoading",msg:"Loading was unsuccessful. Tap here to retry.",useTargetEl:true},constructor:function(a){if(a){Ext.apply(this,a)}},init:function(a){var b=a.store;this.owner=a;a.addEvents({hideMask:true,displayMask:true});b&&b.on({load:this.retry,scope:this});this.loader=new CV.ux.RetryLoader(a,this.loaderConfig);this.loader.addListener("elementscreated",this.bindLoader,this);a.on({hideMask:this.hide,displayMask:this.displayMsg,collapse:this.hide,expand:this.displayMsg,scope:this})},retry:function(b,a,d,c){this.success=d;if(d===null&&!c){this.success=c}this.displayMsg()},displayMsg:function(){console.log(this.owner);if(!this.success){this.loader=this.owner.setLoading(this.loaderConfig);this.loader&&this.bindLoader()}else{this.owner.setLoading(false)}},reload:function(){this.loader&&this.loader.hide();this.owner.store.load()},hide:function(){this.loader&&this.loader.hide()},show:function(){this.loader&&this.loader.show()},bindLoader:function(){var a=this.loader.getTargetEl();a&&a.on({click:this.reload,scope:this})}});Ext.define("CV.controller.Help",{extend:"Ext.app.Controller",requires:["CV.config.ChadoViewer"],views:["CV.view.help.View"],refs:[{ref:"help",selector:"helpview"}],name:"Help",uri:"help",text:"Help",init:function(){var a,b;b=Ext.create("CV.view.help.View");b.show();this.control({"viewport > radiogroup > button[text=Help]":{render:this.headerInit,scope:this}})},header:undefined,headerInit:function(a){this.header=a},show:function(b){var a=this.getHelp();this.render(a)}});Ext.define("CV.view.FeatureGrid",{extend:"Ext.grid.Panel",alias:"widget.sequencesgrid",hideHeaders:false,split:true,title:"Sequences",store:"CV.store.Features",columnLines:true,requires:["CV.ux.HeaderFilters","CV.ux.Retry"],initComponent:function(){if(typeof this.store==="string"){this.store=Ext.create(this.store)}var a=Ext.create("Ext.toolbar.Paging",{store:this.store,displayInfo:false,inputItemWidth:80});this.store.addListener("clear",a.onLoad,a);Ext.apply(this,{events:["clearfilter"],plugins:[Ext.create("CV.ux.StatusMask",{store:this.store})],bbar:[a]});this.callParent(arguments)},columns:[{text:"Feature id",dataIndex:"feature_id",filter:{xtype:"numberfield"},hidden:true,type:"numeric"},{text:"Name",dataIndex:"name",flex:1,renderer:function(b,c,a){var d="";if(b){d='<a href="#feature/'+a.get("feature_id")+'">'+b+"</a> "}return d}},],clear:function(){if(this.store){this.store.removeAll()}}});Ext.define("CV.view.View",{extend:"Ext.container.Container",alias:"widget.dsview",requires:["CV.config.ChadoViewer","CV.view.TagCloud","CV.view.FeatureGrid","CV.view.PieChart","CV.store.Facets","CV.ux.StatusMask","CV.view.Tree","CV.view.CvTabs","CV.view.MetaData","Ext.ux.grid.FiltersFeature","CV.view.Facets"],layout:"border",treeStore:null,vStore:null,graphPanel:null,dsConfig:null,gridStore:null,treePanel:null,treeid:null,changeDataSet:false,fieldPath:"text",facets:[],facetsStore:null,facetsGrid:null,facetsParamArray:undefined,cvPanels:[],filters:[],events:["facetschanged","configchanged"],items:[{xtype:"dstree",region:"west"},{xtype:"tabpanel",region:"center",items:[{xtype:"cvtabs"},{xtype:"metadatapanel"}]},{xtype:"panel",resizable:true,region:"east",layout:"accordion",width:350,items:[{xtype:"sequencesgrid",collapsed:false},{xtype:"facetsgrid",store:"CV.store.Facets"}]}],initComponent:function(){this.callParent(arguments);this.facetsParamArray=new Ext.util.MixedCollection()},afterRender:function(){var j=this,c,f,g,d,a,k,e,l,b=this.down("sequencesgrid"),h=this.down("metadatapanel");k=Ext.create("CV.store.ControlledVocabularies",{autoLoad:false});k.getProxy().url=CV.config.ChadoViewer.self.baseUrl;k.getProxy().extraParams=this.dsConfig.graph.vocabulary;this.vStore=k;k.addListener("load",function(n,m,o){if(o){j.addPanel()}});this.treePanel=this.down("dstree");this.treeStore=this.treePanel.store;this.gridStore=h.store;this.facetsParamArray.add(b.store);this.addListener("configchanged",b.store.changeExtraParams,b.store);this.addListener("configchanged",k.changeExtraParams,k);this.addListener("configchanged",this.gridStore.changeExtraParams,this.gridStore);this.graphPanel=this.down("cvtabs");this.graphPanel.addPlugin({ptype:"statusmask",owner:this.graphPanel,store:this.vStore});this.facetsStore=this.down("facetsgrid").store;this.facetsStore.addListener({load:this.facetsUpdate,datachanged:this.facetsUpdate,clear:function(){this.updateFacetsParam();!this.changeDataSet&&this.fireEvent("facetschanged")},scope:this});this.facetsGrid=this.down("facetsgrid");this.facetsGrid.addDocked({xtype:"button",text:"Clear Facets",dock:"bottom",handler:j.clearSelection,scope:j});j.callParent(arguments)},facetsUpdate:function(b,a,c){this.updateFacetsParam();!this.changeDataSet&&this.fireEvent("facetschanged")},refine:function(){this.vStore.getProxy().setExtraParam("filters",JSON.stringify(this.filters));this.vStore.getProxy().setExtraParam("facets",JSON.stringify(this.facets));this.vStore.load()},removeFacetStore:function(a){this.facetsParamArray.remove(a)},updateExtraParam:function(c,b,a){a.each(function(e){var d=e.getProxy();d&&d.setExtraParam(c,b)})},updateFacetsParam:function(){this.updateExtraParam("facets",JSON.stringify(this.facetsStore.getFacets()),this.facetsParamArray)},updateFilter:function(b,a){this.filters=b.getStore().filters.items;this.refine()},clearSelection:function(){this.clearFacets()},clearFacets:function(a){a=a||false;this.facetsStore.removeAll()},select:function(a){if(typeof a==="undefined"){return}},selectNode:function(){var a;a=this.treeStore.getById(this.treeid);if(a){this.treePanel.expandPath(a.getPath(this.fieldPath),this.fieldPath);this.treePanel.getSelectionModel().select(a);this.treeStore.hasListener("load")&&this.treeStore.removeListener("load",this.selectNode,this)}},setConfig:function(a){if(a){this.dsConfig=a;this.fireEvent("configchanged",a)}},setDS:function(b){var a;b=this.convertToInt(b);this.treeid=b;if(!this.treeStore.isLoading()){}else{}this.gridStore.getProxy().setExtraParam("id",b);this.gridStore.getProxy().setExtraParam("ids",CV.config.ChadoViewer.getComaIds());this.gridStore.load();this.vStore.removeAll();this.vStore.getProxy().setExtraParam("id",b);this.vStore.load()},convertToInt:function(a){if(!isNaN(a)){return parseInt(a)}},loadStore:function(a){this.getProxy().setExtraParam("facets",Ext.JSON.encode(a.getFacets()));this.load()},clearGraphPanel:function(){var a=this.graphPanel.items.getAt(0),a=a?a.store:null;this.graphPanel.disable();this.graphPanel.removeAll(true);this.graphPanel.enable()},visibleColumns:function(a){var c=Ext.clone(CV.config.ChadoViewer.self.rawColumns),b,d;for(b in a){d=a[b];c.splice(1,0,{dataIndex:d.id,text:d.text,flex:1})}return c},addPanel:function(){var a=[],b;this.clearGraphPanel();this.vStore.each(function(g,k){var m,e,l,j=[{name:"cvterm_id",type:"auto"},{name:"name",type:"string",},{name:"total",type:"integer"},{name:"highername",type:"object",defaultValue:CV.config.ChadoViewer.getHigherNames()},{name:"cv_id",type:"auto"}],h=CV.config.ChadoViewer.getOnlyIds(),d,c={name:undefined,type:"integer",text:undefined},f;this.newFields=[];for(d in h){f=Ext.clone(c);f.name=h[d];this.newFields.push(f);j.push(f)}m=Ext.create("CV.store.FeatureCount",{fields:j,listeners:{beforedestroy:this.removeFacetStore,scope:this}});this.facetsParamArray.add(m);m.getProxy().url=CV.config.ChadoViewer.self.baseUrl;m.getProxy().extraParams=Ext.clone(this.dsConfig.graph.cvterm);m.getProxy().setExtraParam("id",g.get("dsid"));m.getProxy().setExtraParam("cv_id",g.get("cv_id"));m.getProxy().setExtraParam("cv_name",g.get("name"));m.getProxy().setExtraParam("get",g.get("get"));m.getProxy().setExtraParam("ids",CV.config.ChadoViewer.getComaIds());e=this.createTab(m,g);a.push(e)},this);this.graphPanel.add(a);this.graphPanel.setActiveTab(0);this.cvPanels=a},loadingOn:function(){this.setLoading(true)},loadingOff:function(b,a,c){this.setLoading(false)},refreshDsview:function(){var a=this;this.graphPanel.items.each(function(b){b.active.reloadStore=false;b.items.each(function(c){if(c!=b.active){c.reloadStore=true}})})},isDefferedLoad:function(){var a=this.graphPanel.getActiveTab();this.graphPanel.items.each(function(b){if(a!=b){b.reloadStore=true}else{b.reloadStore=false}})},createTab:function(d,f){var b,c,a=Ext.create("CV.view.TagCloud",{store:d,listeners:{beforeshow:function(){this.setThreshold(c)}},});b=this.visibleColumns(CV.config.ChadoViewer.self.selectedIds);var e={ftype:"filters",autoReload:false,local:true,filters:[{type:"string",dataIndex:"name"}]};b[0].filter={xtype:"textfield"};if(!this.flag){this.flag=true}c=Ext.create("CV.view.ChadoPanel",{title:f.get("title"),layout:"fit",record:f,store:d,height:400,plugins:[Ext.create("CV.ux.StatusMask",{ptype:"statusmask",store:d})],listeners:{setthreshold:function(){this.active.setThreshold(this)}},autoDestroy:false,items:[a,Ext.create("CV.view.BarChart",{store:d,yField:CV.config.ChadoViewer.getOnlyIds(),titles:CV.config.ChadoViewer.getIdsText(),listeners:{beforeactivate:function(){this.setThreshold(c)}}}),Ext.create("CV.view.PieChart",{xtype:"pieview",store:d,listeners:{beforeactivate:function(){this.setThreshold(c)}}}),Ext.create("CV.view.RawData",{xtype:"rawdata",store:d,columns:b,features:[e],listeners:{beforeactivate:function(){this.setThreshold(c)}},setThreshold:function(g){g.setThreshold(g.minValue)}})]});return c},onRemoved:function(){this.callParent(arguments);var b=this.query("component"),a;for(a=0;a<b.length;a++){b[a].events.hideMask&&b[a].fireEvent("hideMask")}},onAdded:function(){this.callParent(arguments);var b=this.query("component"),a;for(a=0;a<b.length;a++){b[a].events.hideMask&&b[a].fireEvent("displayMask")}}});Ext.define("CV.view.library.View",{extend:"CV.view.View",alias:"widget.libraryview",requires:["CV.config.ChadoViewer"],initComponent:function(){var a=this;this.dsConfig=CV.config.ChadoViewer.self.library;a.callParent(arguments)}});Ext.define("CV.controller.Library",{extend:"Ext.app.Controller",models:[],stores:["CV.store.FeatureCount","CV.store.Facets","CV.store.CvTerms","CV.store.Features"],views:["CV.view.library.View"],requires:["CV.config.ChadoViewer"],libraryView:"CV.view.library.View",refs:[{ref:"lib",selector:"libraryview"},{ref:"tree",selector:"libraryview dstree"},{ref:"sequencesGrid",selector:"libraryview sequencesgrid"},{ref:"graphPanel",selector:"libraryview cvtabs"},{ref:"metadataPanel",selector:"libraryview metadatapanel"},{ref:"dsview",selector:"libraryview dsview"},{ref:"cvtabs",selector:"libraryview cvtabs"}],name:"Library",text:"Protein Search",uri:"library",libraryId:"id",item:null,init:function(){var b,c,a=this;this.control({"libraryview dstree":{selectionchange:this.multiSelectUri,load:this.selectNodes},"viewport radiogroup button[name=Library]":{render:this.headerInit,scope:this},libraryview:{facetschanged:this.onFacetsChanged},"libraryview chadopanel":{filtercomplete:this.onFilterComplete}});if(CV.app.facets){this.control({"libraryview rawdatapanel":{selectionchange:function(d,e){if(e.length){a.graphSelection(e[0])}}},"libraryview pieview":{itemclicked:this.graphSelection,scope:this},"libraryview libraryBar":{itemclicked:this.graphSelection,scope:this},"libraryview tagcloud":{itemclicked:this.graphSelection,scope:this}})}},header:undefined,headerInit:function(a){this.header=a},show:function(c){var a=this.getLib(),b=c.id&&JSON.parse(decodeURI(c.id));CV.config.ChadoViewer.self.selectedIds=b;if(Ext.isString(this.libraryView)){this.libraryView=this.getView(this.libraryView).create()}this.render(this.libraryView);this.clearSelection();if(b&&b[0]){switch(b[0].type){case"library":id=b[0].id;this.libraryView.setConfig(CV.config.ChadoViewer.self.library);if(typeof id!=="undefined"){this.treeSelect(id,b)}break;case"species":id=b[0].id;this.libraryView.setConfig(CV.config.ChadoViewer.self.species);if(typeof id!=="undefined"){this.treeSelect(id)}break}}},onFilterComplete:function(){var c=this.getCvtabs(),a=c.getActiveTab(),b=a&&a.down("tagcloud");b&&b.draw()},onFacetsChanged:function(){var a=this.getSequencesGrid(),c=this.getLib(),b=this.getCvtabs();a.getStore().load();c.isDefferedLoad();b.reload()},graphSelection:function(b){console.log(b);var c=this.getLib(),a=c.down("cvtabs").getActiveTab();if(a&&(a.othersRec!==b)){c.facetsStore.loadData([{cvterm_id:b.get("cvterm_id"),name:b.get("name"),cv_id:b.get("cv_id")}],true)}},multiSelectUri:function(f,b,c){var a=[],e,d,g;if(b.length){for(d in b){record=b[d];e={id:record.get(this.libraryId),type:record.get("type"),text:record.get("text")};a.push(e)}url=this.uri+"/"+JSON.stringify(a);CV.config.ChadoViewer.self.currentUri=url;g=this.validateSelection(a);if(g){CV.ux.Router.redirect(url)}}},validateSelection:function(a){var d,c,b;d=this.validateSameType(a);d=d&&this.validateJustUnknow(a);return d},validateSameType:function(a){var d,c=true,b;for(i in a){d=a[i];b=b?b:a[0];c&=(d.type==b.type);b=d;if(!c){Ext.Msg.show({title:"Error!",msg:"Selection must be of the same type i.e. either all species or library."});break}}return c},validateJustUnknow:function(b){var d,c=true,a=false;for(i in b){d=b[i];if(d.id<0){a=true;break}}if(a&&b.length>1){c=false;Ext.Msg.show({title:"Error!",msg:"Multiple selection cannot be made with Unknow"})}return c},updateUri:function(e,a,c){var d={id:a.get(this.libraryId),type:a.get("type"),name:a.get("name")},b=this.uri+"/"+JSON.stringify([d]);CV.ux.Router.redirect(b)},treeSelect:function(m,f){var c,j,b,l,g,e,k,a,n=this.getTree(),d=n.getSelectionModel(),h=this.getLib();a=this.getLib();this.item=m;this.selectNodes(f);b=this.getSequencesGrid();b.store.getProxy().setExtraParam("id",m);b.store.getProxy().setExtraParam("ids",CV.config.ChadoViewer.getComaIds());a.setDS(m);b.store.loadPage(1)},selectNode:function(){var c=this.getTree().store,d;c&&this.treeLoaded(c);if(this.item!==null){var b,a=this.getTree(),d=a.getSelectionModel();b=a.getStore().getRootNode().findChild(this.libraryId,this.item,true);b&&b.parentNode.expand(true);b&&d.select(b,false,true);this.item=null}},selectNodes:function(){var g=this.getTree().store,c,f,d,e=[],b=CV.config.ChadoViewer.self.selectedIds,a;a=function(k){if((k.get("type")==d.type)&&(k.get("id")==d.id)){return true}};if(b&&b.length){var h,j=this.getTree(),c=j.getSelectionModel();for(f in b){d=b[f];h=j.getStore().getRootNode().findChildBy(a,this,true);h&&h.parentNode.expand(true);h&&e.push(h)}e&&c.select(e,false,true)}},treeLoaded:function(a){},cvtermFilter:function(b,d){var a,c=[];this.getSequencesGrid().store.filter(c)},clearSelection:function(){var c=this.getTree(),a=this.getSequencesGrid(),d=this.getGraphPanel(),b=this.getMetadataPanel(),e=this.getLib();c&&c.clear();a.clear();b.clear();d.clear();e.changeDataSet=true;e.clearFacets(true);e.changeDataSet=false}});
