<project name="ChadoViewer" default="build" basedir=".">
	<property name="deploy.dir" value="/var/www/chadotest"/>
	<property name="extjs.dir" value="extjs"/>
	<property name="build.dir" value="build"/>
	<property name="theme" value="neptune"/>
	<target name="find-cmd" unless="cmd.dir">
		<!--
		Run "sencha which" to find the Sencha Cmd basedir and get "cmd.dir" setup. We
		need to execute the command with curdir set properly for Cmd to pick up that we
		are running for an application.
		-->
		<exec executable="sencha" dir="${basedir}">
			<arg value="which"/>
			<arg value="-o=$cmddir$"/>
		</exec>

		<!-- Now read the generated properties file and delete it -->
		<property file="$cmddir$"/>
		<delete file="$cmddir$"/>
	</target>
	<target name="init-antcontrib">
		<taskdef resource="net/sf/antcontrib/antlib.xml">
			<classpath>
				<pathelement location="${cmd.dir}/lib/ant-contrib-1.0b3.jar"/>
				<pathelement
				location="${cmd..dir}/lib/commons-httpclient-3.0.1.jar"/>
				<pathelement
				location="${cmd.dir}/lib/commons-logging-1.0.4.jar"/>
				<pathelement location="${cmd.dir}/lib/commons-codec-1.3.jar"/>
				<pathelement location="/home/var03f/Downloads/Aptana_Studio_3/plugins/com.jcraft.jsch_0.1.44.v201101211721.jar"/>
			</classpath>
		</taskdef>
	</target>
	<target name="init-sencha-cmd" depends="init-antcontrib">
		<taskdef name="scp" classname="org.apache.tools.ant.taskdefs.optional.ssh.Scp" classpath="${cmd.dir}/stbuild/st-res/windows/ant/lib/ant-jsch.jar">
			<classpath>
				<pathelement location="/home/var03f/Downloads/Aptana_Studio_3/plugins/com.jcraft.jsch_0.1.44.v201101211721.jar"/>
			</classpath>
		</taskdef>
		<taskdef resource="com/sencha/ant/antlib.xml" classpath="${cmd.dir}/sencha.jar"/>
	</target>
	<target name="build" depends="init-sencha-cmd">
		<!--
		clean zip file
		-->
		<delete file="${ant.project.name}.zip"/>
		<delete includeemptydirs="true">
			<fileset dir="${build.dir}" includes="*"/>
		</delete>
		<copy todir="css/images/">
			<fileset dir="${extjs.dir}/resources/ext-theme-${theme}/images/" includes="**/*"/>
			<fileset file="${extjs.dir}/examples/writer/images/delete.png"/>
		</copy>
		<x-sencha-command dir="${basedir}">
			<!-- -debug -->
			compile
			--classpath=app,${extjs.dir}/src,${extjs.dir}/examples/ux/grid,app.js
			exclude
			--namespace=Ext,CV.controller.Species
			and
			include
			--namespace=Ext.ux.grid
			and
			concatenate
			-out=${build.dir}/all.js
			and
			page
			--scripts=lib/ext-all.js
			--input-file=index.html
			--output=${build.dir}/index.html
			--name=index
		</x-sencha-command>
		<!-- add license text-->
		<concat destfile="${build.dir}/all-classes.js" force="no">
		    <filelist dir="${basedir}" files="LICENSE"/>
		    <filelist dir="${build.dir}" files="all.js"/>
		</concat>
		<delete file="${build.dir}/all.js"/>
		<!--
		pack necessary files for distribution
		-->
		<zip destfile="${ant.project.name}.zip">
			<fileset dir="." includes="ws/**/*" excludes="ws/connect.inc,ws/transcriptDB/connection.inc,ws/chado_genes4all/connection.inc"/>
			<zipfileset dir="ws" includes="connect.inc" fullpath="ws/transcriptDB/connection.inc"/>
			<zipfileset dir="ws" includes="connect.inc" fullpath="ws/chado_genes4all/connection.inc"/>
			<zipfileset dir="lib" prefix="lib" />
			<zipfileset dir="css/images/" prefix="css/images/" />
			<zipfileset dir="css" prefix="css" />
			<zipfileset dir="build" />
		</zip>
	</target>
	<target name="deploy" depends="build">
		<delete includeemptydirs="true">
			<fileset dir="${deploy.dir}" includes="**/*" />
		</delete>
		<copy file="${ant.project.name}.zip" todir="${deploy.dir}" />
		<unzip src="${deploy.dir}/${ant.project.name}.zip" dest="${deploy.dir}"/>
	</target>
	<target name="remotecopy" depends="build">
		<delete includeemptydirs="true">
			<fileset dir="test/" includes="**/*" />
		</delete>
		<unzip src="${ant.project.name}.zip" dest="test"/>
		<scp todir="var03f@biosecurity.it.csiro.au:/var/www/test/ws" password="" trust="true">
			<fileset dir="test/ws" includes="**/*" />
		</scp>

	</target>
</project>
